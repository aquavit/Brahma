------------------------------------------------------
Introduction to Brahma version 2.0 (c) 2007, Ananth B.
------------------------------------------------------

What is Brahma?
---------------
Brahma is an open-source library written for the .NET 3.5 framework (in C# 3.0), to provide high-level access to parallel streaming computations on a variety of processors.

Please note at while at this time Brahma has a GPU provider (and its focus is GPGPU), it can indeed be adapted to run on any kind of processor.

What can I do with Brahma?
--------------------------
Brahma 2.0 uses C# 3.0's new LINQ syntax to specify streaming transformation of data. Using Brahma, you can mix statements that run on the GPU and statements that run on the CPU inside a single method! With absolutely *no* glue code required, a complex multipass GPU computation with intervening CPU operations can be performed with just a few lines of code. All the glue and shader code required is *automatically* generated by Brahma. All you need to do is write high-level .NET code.

What does it mean to me?
------------------------
With processor speeds levelling off, faster today often means "parallel". We are seeing a paradigm shift from traditional serial programming to concurrent programming models. Brahma lets you use a really powerful parallel processor already on your computer today, to perform blazing fast computations. The GPU. Modern GPUs are powerful parallel processors, and can be found on almost every computer. However, using them for anything other than graphics involves considerable work-arounds and the understanding of at least one graphics API or shading language. Such programs also tend to have a lot of "glue-code" to wire up the API, the shading language and program. Brahma does all of this automagically, so all you care about is the LINQ query. It has compiled queries, which provide very high performance for repeated runs. Brahma is also API and shading language agnostic, which means that you can switch graphics API by simply changing one line of code.

In short, Brahma 2.0 is to be a parallel computation (with emphasis on GPGPU) framework using LINQ to specify streaming transformations on data (a LINQ-to-streaming computation or LINQ-to-GPU, of sorts).

Homepage: http://brahma.ananthonline.net
Sourceforge project: https://sourceforge.net/projects/brahma-fx/
Sourceforge SVN repository: https://brahma-fx.svn.sourceforge.net/svnroot/brahma-fx

Please send comments and/or suggestions to ananth<at>ananthonline<dot>net.